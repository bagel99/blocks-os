/*
 * USB ACM CDC Device
 */

import usb;

package usbdev
{
    const ManufactString = 1;
    const ProductString = 2;
    const SerialNoString = 3;
    const DevDesc: usb.DeviceDesc: align(4) = 
    {	usb.DeviceDesc?size,		// desc. length
    	DEVICE,
    	0x0200,				// version 2.0
    	CDC,				// class
    	0,				// subclass
    	0,				// protocol
    	64,				// max packet size
    	0x0483,				// vendor
    	0x5712,				// product
    	0x0200,				// release
    	ManufactString,			// manufacturer string
    	ProductString,			// product string
    	SerialNoString,			// serial number string
    	1				// number of configurations
    };

    type SuperDesc:
    {	conf: usb.ConfigDesc;
    	intf: usb.InterfaceDesc: align(1);
    	endp1:usb.EndpointDesc: align(1);
    }: nopad;
    const SuperConfDesc: SuperDesc: align(4) =
    {
	{   usb.ConfigDesc?size,		// desc. length
	    CONFIG,
	    34,				// total length
	    1,				// number of interfaces
	    1,				// configuration value
	    0,				// configuration string index
	    { .RemoteWake=true,.BusPower=true,.SelfPower=false }, // attributes
	    0x32				// max power 100mA
	},
	{   usb.InterfaceDesc?size,
    	    INTERFACE,
    	    0,				// interface number
    	    0,				// alternate setting
    	    1,				// number of endpoints
    	    HID,			// class
    	    1,				// subclass = boot
    	    2,				// protocol = mouse
    	    0				// string
	},
	{   usb.EndpointDesc?size,
    	    ENDPOINT,
    	    { .Dir=IN, .Num=1 },
    	    { .Type=INTR },
    	    4,				// max packet size
    	    32				// polling inverval 32mS
	}
    };

    const S0: usb.StringDesc =		// Language array
    {	4,
 	STRING,
 	{ 0x0409 }			// US English
    };
    const S1: usb.StringDesc =		// Manufacturer
    {   8,
    	STRING,
	{'T','L','A'}
    };    	
    const S2: usb.StringDesc =		// Product
    {   16,
    	STRING,
	{'C','D','C','/','A','C','M'}
    };
    const S3: usb.StringDesc =		// Serial
    {   26,
    	STRING,
	{'0','0','0','0','0','0','1'}
    };
}

