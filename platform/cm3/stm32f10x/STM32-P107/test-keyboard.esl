// main routine for STM-P107 platform

// Board specific stuff
import sys;
import trace;
import debug;

// Cortex M3 stuff
import syscb;
import fault;
import systick;
import nvic;

// STM32F10x stuff
import rcc;
import exti;


/*
 * Joystick demo USB device
 */
import usbdev;
import usb_keyboard;


/*
 */
var button1, button2: boolean: in, out;

proc EINT0_IRQ()
{
    button1 = true;
    exti.ClearIntr(sys.BUT1);
}

proc EINT10_15_IRQ()
{
    if exti.Pending(sys.BUT2) then
    {   button2 = true;
        exti.ClearIntr(sys.BUT2);
    }
}

// "Hello world!\n" in keycodes
const NONE: usbdev.Modifier = { .LeftShift=false };	// all false
const SHFT: usbdev.Modifier = { .LeftShift=true };
const mesg1: []usbdev.KeyCode =
{   {SHFT,0x0B},{NONE,0x08},{NONE,0x0F},{NONE,0x0F},{NONE,0x12},{NONE,0x2C},
    {NONE,0x1A},{NONE,0x12},{NONE,0x15},{NONE,0x0F},{NONE,0x07},{SHFT,0x1E},
    {NONE,0x28}
};

proc main()
{   var i: _uint;

    rcc.Init();
    sys.Init();
    debug.Init();
    usbdev.KeyboardInit();
    exti.EnableIntr(sys.BUT1, RISING);	// WAKEUP
    exti.EnableIntr(sys.BUT2, FALLING);	// TAMPER
    sys.ledon(0);
    // wait for button
    while !button1 do {}
    button1 = false;
    // then "type" message
    for i from 0 to mesg1?len-1 do
	usbdev.Key(mesg1[i]);
    loop
    {
    }

}
// vim: ts=8 sw=4 noet nowrap

